// Code generated by protoc-gen-go. DO NOT EDIT.
// source: basic-message.proto

package basic_message

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The request message containing the user's name.
type BackendRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BackendRequest) Reset()         { *m = BackendRequest{} }
func (m *BackendRequest) String() string { return proto.CompactTextString(m) }
func (*BackendRequest) ProtoMessage()    {}
func (*BackendRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a6aa3ac1cf1a4cf, []int{0}
}

func (m *BackendRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BackendRequest.Unmarshal(m, b)
}
func (m *BackendRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BackendRequest.Marshal(b, m, deterministic)
}
func (m *BackendRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BackendRequest.Merge(m, src)
}
func (m *BackendRequest) XXX_Size() int {
	return xxx_messageInfo_BackendRequest.Size(m)
}
func (m *BackendRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BackendRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BackendRequest proto.InternalMessageInfo

func (m *BackendRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// The response message containing the greetings
type BackendReply struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BackendReply) Reset()         { *m = BackendReply{} }
func (m *BackendReply) String() string { return proto.CompactTextString(m) }
func (*BackendReply) ProtoMessage()    {}
func (*BackendReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a6aa3ac1cf1a4cf, []int{1}
}

func (m *BackendReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BackendReply.Unmarshal(m, b)
}
func (m *BackendReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BackendReply.Marshal(b, m, deterministic)
}
func (m *BackendReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BackendReply.Merge(m, src)
}
func (m *BackendReply) XXX_Size() int {
	return xxx_messageInfo_BackendReply.Size(m)
}
func (m *BackendReply) XXX_DiscardUnknown() {
	xxx_messageInfo_BackendReply.DiscardUnknown(m)
}

var xxx_messageInfo_BackendReply proto.InternalMessageInfo

func (m *BackendReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*BackendRequest)(nil), "basic_message.backendRequest")
	proto.RegisterType((*BackendReply)(nil), "basic_message.backendReply")
}

func init() { proto.RegisterFile("basic-message.proto", fileDescriptor_2a6aa3ac1cf1a4cf) }

var fileDescriptor_2a6aa3ac1cf1a4cf = []byte{
	// 195 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4e, 0x4a, 0x2c, 0xce,
	0x4c, 0xd6, 0xcd, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17,
	0xe2, 0x05, 0x0b, 0xc6, 0x43, 0x05, 0x95, 0x54, 0xb8, 0xf8, 0x92, 0x12, 0x93, 0xb3, 0x53, 0xf3,
	0x52, 0x82, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0x84, 0xb8, 0x58, 0xf2, 0x12, 0x73, 0x53,
	0x25, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0xc0, 0x6c, 0x25, 0x0d, 0x2e, 0x1e, 0xb8, 0xaa, 0x82,
	0x9c, 0x4a, 0x21, 0x09, 0x2e, 0x76, 0xa8, 0x01, 0x50, 0x65, 0x30, 0xae, 0x51, 0x18, 0x17, 0x3b,
	0x54, 0xa5, 0x90, 0x37, 0x17, 0x77, 0x71, 0x6a, 0x5e, 0x8a, 0x2f, 0x44, 0x46, 0x48, 0x56, 0x0f,
	0xc5, 0x66, 0x3d, 0x54, 0x6b, 0xa5, 0xa4, 0x71, 0x49, 0x17, 0xe4, 0x54, 0x2a, 0x31, 0x38, 0x99,
	0x71, 0x49, 0x67, 0xe6, 0xeb, 0xa5, 0x17, 0x15, 0x24, 0xeb, 0xa5, 0x56, 0x24, 0xe6, 0x16, 0xe4,
	0xa4, 0x16, 0xeb, 0x65, 0xa4, 0xe6, 0xe4, 0xe4, 0x97, 0xe7, 0x17, 0xe5, 0xa4, 0x38, 0xf1, 0x7b,
	0x80, 0xd8, 0xe1, 0x20, 0x76, 0x00, 0xc8, 0x9b, 0x01, 0x8c, 0x8b, 0x98, 0x98, 0x3d, 0x7c, 0xc2,
	0x93, 0xd8, 0xc0, 0xbe, 0x36, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0xcd, 0x14, 0xdf, 0x99, 0x0c,
	0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BackendClient is the client API for Backend service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BackendClient interface {
	// Sends a greeting
	SendMessage(ctx context.Context, in *BackendRequest, opts ...grpc.CallOption) (*BackendReply, error)
}

type backendClient struct {
	cc *grpc.ClientConn
}

func NewBackendClient(cc *grpc.ClientConn) BackendClient {
	return &backendClient{cc}
}

func (c *backendClient) SendMessage(ctx context.Context, in *BackendRequest, opts ...grpc.CallOption) (*BackendReply, error) {
	out := new(BackendReply)
	err := c.cc.Invoke(ctx, "/basic_message.backend/sendMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BackendServer is the server API for Backend service.
type BackendServer interface {
	// Sends a greeting
	SendMessage(context.Context, *BackendRequest) (*BackendReply, error)
}

func RegisterBackendServer(s *grpc.Server, srv BackendServer) {
	s.RegisterService(&_Backend_serviceDesc, srv)
}

func _Backend_SendMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BackendRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BackendServer).SendMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/basic_message.backend/SendMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BackendServer).SendMessage(ctx, req.(*BackendRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Backend_serviceDesc = grpc.ServiceDesc{
	ServiceName: "basic_message.backend",
	HandlerType: (*BackendServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "sendMessage",
			Handler:    _Backend_SendMessage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "basic-message.proto",
}
